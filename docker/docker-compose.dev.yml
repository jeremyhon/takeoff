version: '3'
services:
  # jenkins:
  #   build:
  #     context: ../.
  #     dockerfile: docker/jenkins/Dockerfile.dev
  #   image: jenkins
  #   environment:
  #     - JENKINS_OPTS="--prefix=/jenkins/"
  #   ports:
  #     - '8080:8080'
  server:
    build:
      context: ../.
      dockerfile: docker/server/Dockerfile.dev
    image: ngnix-server
    deploy:
      resources: # Set these values when you know what you do!
        limits:
          cpus: '0.001'
          memory: 50M
        reservations:
          cpus: '0.0001'
          memory: 20M
    ports:
      - '80:80' # Connect localhost 80 port to container 80 port
    links: # Link services to access http://app and  http://api inside the container
      - api:api
      - app:app
      # - jenkins:jenkins
    depends_on:
      - "api"
      - "app"
  app:
    build:
      context: ../.
      dockerfile: docker/app/Dockerfile.dev
    image: frontend-app
    # links:
    #   - jenkins:jenkins
    environment:
      - NODE_ENV=development  # Production for Compiled React and Service Workers
    volumes: # For webpack dev server to use our local files
      - ./../app:/home/envuser/apphome
    ports:
      - '3000:3000' # For docker to now where to redirect HMR queries
  api:
    build:
      context: ../.
      dockerfile: docker/api/Dockerfile.dev
    image: takeoff-api
    env_file:
      - ./../api/.env
    links:
      - db:db
      # - jenkins:jenkins
    volumes:
      - ./../api:/home/envuser/apphome
    ports:
      - '10000:10000'
    depends_on:
      - "db"
  db:
    build:
      context: ../.
      dockerfile: docker/db/postgres/Dockerfile.dev
    env_file: db/postgres/psql.env
    image: db
    env_file: ../docker/db/postgres/psql.env
    ports:
      - '5431:5432'
